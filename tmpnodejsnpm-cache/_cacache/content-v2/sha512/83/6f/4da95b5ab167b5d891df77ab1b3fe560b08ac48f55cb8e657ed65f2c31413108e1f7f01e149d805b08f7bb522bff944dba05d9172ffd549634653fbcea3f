{"_id":"beasties","_rev":"3-7bd6fa5d4953be203302222485efc845","name":"beasties","dist-tags":{"latest":"0.2.0"},"versions":{"0.0.0":{"name":"beasties","version":"0.0.0","author":{"name":"Daniel Roe","email":"daniel@roe.dev"},"_id":"beasties@0.0.0","maintainers":[{"name":"danielroe","email":"daniel@roe.dev"}],"dist":{"shasum":"7070b135f27329725d0ef675b3a08d213d40570f","tarball":"https://registry.npmjs.org/beasties/-/beasties-0.0.0.tgz","fileCount":2,"integrity":"sha512-HeNf96Wqkb3XanNND+Kn8j7ZthTB75AupfXqR2fDiFve1f7Mj3f2ipexlQerFIAn5PlCzyI2AcEiHvUmcPk3nA==","signatures":[{"sig":"MEUCIQChMjGPRxZ9u+gI8SX4YxMGWrzVKh9gFDNh1SFE1paOIgIgLxV7nFrxWPZQ7bxJLEv/tArKJlwqrNHNjTZ7Qy5+M54=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":118},"gitHead":"1c6cbe18ba5e4016051153921f7c279ae6829d58","_npmUser":{"name":"danielroe","email":"daniel@roe.dev"},"_npmVersion":"10.7.0","directories":{},"_nodeVersion":"18.20.4","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/beasties_0.0.0_1729859060441_0.5483078520933289","host":"s3://npm-registry-packages"}},"0.0.26":{"name":"beasties","version":"0.0.26","keywords":["critical css","inline css","critical","beasties","webpack plugin","performance"],"author":{"name":"The Chromium Authors"},"license":"Apache-2.0","_id":"beasties@0.0.26","maintainers":[{"name":"danielroe","email":"daniel@roe.dev"}],"contributors":[{"name":"Jason Miller","email":"developit@google.com"},{"name":"Janicklas Ralph","email":"janicklas@google.com"}],"homepage":"https://github.com/danielroe/beasties#readme","bugs":{"url":"https://github.com/danielroe/beasties/issues"},"dist":{"shasum":"b21e8e33cac2989cc313f918cceb349df6cad170","tarball":"https://registry.npmjs.org/beasties/-/beasties-0.0.26.tgz","fileCount":10,"integrity":"sha512-LlSWTlvFmhISUalsW5nXsAZMxPeEiXqh3dyYOEBSAC/YmPMb4Wmfv0vaGZZjYFaMjS/o3/W0B4+NC3c/q5CN1Q==","signatures":[{"sig":"MEQCIHbL5/VSnfJiJfEfcc7BjP2nytJJnAs1Ro0J/xz7dgGgAiA3v/cCF0M1o478Yb+euKVpW3OOdKTgM+L/KhuzQdUWfA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":166065},"main":"dist/beasties.js","module":"dist/beasties.mjs","source":"src/index.js","exports":{"import":"./dist/beasties.mjs","default":"./dist/beasties.mjs","require":"./dist/beasties.js"},"gitHead":"bd9ebe2a4dfd494a5ceb2569a5222917e54716a9","scripts":{"docs":"documentation readme -q --no-markdown-toc -a public -s Usage --sort-order alpha src","build":"microbundle --target node --no-sourcemap -f cjs,esm","prepare":"npm run -s build"},"typings":"src/index.d.ts","_npmUser":{"name":"danielroe","email":"daniel@roe.dev"},"repository":{"url":"git+https://github.com/danielroe/beasties.git","type":"git","directory":"packages/beasties"},"_npmVersion":"10.2.3","description":"Inline critical CSS and lazy-load the rest.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"chalk":"^4.1.0","postcss":"^8.4.23","css-select":"^5.1.0","domhandler":"^5.0.2","htmlparser2":"^8.0.2","dom-serializer":"^2.0.0","postcss-media-query-parser":"^0.2.3"},"_hasShrinkwrap":false,"devDependencies":{"microbundle":"^0.12.3","documentation":"^13.0.2"},"_npmOperationalInternal":{"tmp":"tmp/beasties_0.0.26_1729888786439_0.430477220367971","host":"s3://npm-registry-packages"}},"0.1.0":{"name":"beasties","version":"0.1.0","keywords":["critical css","inline css","critical","beasties","webpack plugin","performance"],"author":{"name":"The Chromium Authors"},"license":"Apache-2.0","_id":"beasties@0.1.0","maintainers":[{"name":"danielroe","email":"daniel@roe.dev"}],"contributors":[{"name":"Jason Miller","email":"developit@google.com"},{"name":"Janicklas Ralph","email":"janicklas@google.com"}],"homepage":"https://github.com/danielroe/beasties#readme","bugs":{"url":"https://github.com/danielroe/beasties/issues"},"dist":{"shasum":"f8f8ba22ff79c86f4dcebe50527cefdf9f0d52c4","tarball":"https://registry.npmjs.org/beasties/-/beasties-0.1.0.tgz","fileCount":8,"integrity":"sha512-+Ssscd2gVG24qRNC+E2g88D+xsQW4xwakWtKAiGEQ3Pw54/FGdyo9RrfxhGhEv6ilFVbB7r3Lgx+QnAxnSpECw==","signatures":[{"sig":"MEQCIHpKVcd6eE3ySTBt/s+j3TA0aded5r68X8Sl/8izHDZ6AiBBsKMQad77YHiGX7miUHLHTTCUB+lamH7GMuTp0u0M8g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":88575},"main":"dist/index.cjs","_from":"file:beasties-0.1.0.tgz","types":"./dist/index.d.ts","module":"dist/index.mjs","exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","default":"./dist/index.mjs","require":"./dist/index.cjs"}},"scripts":{"docs":"documentation readme src -q --no-markdown-toc -a public -s Usage --sort-order alpha","build":"unbuild && cp src/index.d.ts dist/index.d.ts","build:stub":"unbuild --stub && cp src/index.d.ts dist/index.d.ts"},"_npmUser":{"name":"danielroe","email":"daniel@roe.dev"},"_resolved":"/private/var/folders/48/0bsggqvn049_nfcq7msw2njw0000gn/T/b96ca71d970d255ff2cdcb73b1a44b65/beasties-0.1.0.tgz","_integrity":"sha512-+Ssscd2gVG24qRNC+E2g88D+xsQW4xwakWtKAiGEQ3Pw54/FGdyo9RrfxhGhEv6ilFVbB7r3Lgx+QnAxnSpECw==","repository":{"url":"git+https://github.com/danielroe/beasties.git","type":"git","directory":"packages/beasties"},"_npmVersion":"10.2.3","description":"Inline critical CSS and lazy-load the rest.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"postcss":"^8.4.47","css-what":"^6.1.0","css-select":"^5.1.0","domhandler":"^5.0.3","picocolors":"^1.1.1","htmlparser2":"^9.0.0","dom-serializer":"^2.0.0","postcss-media-query-parser":"^0.2.3"},"_hasShrinkwrap":false,"devDependencies":{"unbuild":"2.0.0","documentation":"14.0.3","@types/postcss-media-query-parser":"0.2.4"},"_npmOperationalInternal":{"tmp":"tmp/beasties_0.1.0_1729955650224_0.9663130537547466","host":"s3://npm-registry-packages"}},"0.2.0":{"name":"beasties","version":"0.2.0","description":"Inline critical CSS and lazy-load the rest.","author":{"name":"The Chromium Authors"},"contributors":[{"name":"Jason Miller","email":"developit@google.com"},{"name":"Janicklas Ralph","email":"janicklas@google.com"}],"license":"Apache-2.0","repository":{"type":"git","url":"git+https://github.com/danielroe/beasties.git","directory":"packages/beasties"},"keywords":["critical css","inline css","critical","beasties","webpack plugin","performance"],"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","require":"./dist/index.cjs","default":"./dist/index.mjs"}},"main":"dist/index.cjs","module":"dist/index.mjs","types":"./dist/index.d.ts","engines":{"node":">=14.0.0"},"dependencies":{"css-select":"^5.1.0","css-what":"^6.1.0","dom-serializer":"^2.0.0","domhandler":"^5.0.3","htmlparser2":"^9.1.0","picocolors":"^1.1.1","postcss":"^8.4.49","postcss-media-query-parser":"^0.2.3"},"devDependencies":{"@types/postcss-media-query-parser":"0.2.4","documentation":"14.0.3","unbuild":"2.0.0"},"scripts":{"build":"unbuild && node -e \"require('fs/promises').cp('src/index.d.ts', 'dist/index.d.ts')\"","build:stub":"unbuild --stub && node -e \"require('fs/promises').cp('src/index.d.ts', 'dist/index.d.ts')\"","docs":"documentation readme src -q --no-markdown-toc -a public -s Usage --sort-order alpha"},"_id":"beasties@0.2.0","bugs":{"url":"https://github.com/danielroe/beasties/issues"},"homepage":"https://github.com/danielroe/beasties#readme","_integrity":"sha512-Ljqskqx/tbZagIglYoJIMzH5zgssyp+in9+9sAyh15N22AornBeIDnb8EZ6Rk+6ShfMxd92uO3gfpT0NtZbpow==","_resolved":"/private/var/folders/6z/46zhtr8n22zg8nh3bp7cq7c40000gn/T/2575c090ab6c105b97c2819c1104873f/beasties-0.2.0.tgz","_from":"file:beasties-0.2.0.tgz","_nodeVersion":"20.18.0","_npmVersion":"10.8.2","dist":{"integrity":"sha512-Ljqskqx/tbZagIglYoJIMzH5zgssyp+in9+9sAyh15N22AornBeIDnb8EZ6Rk+6ShfMxd92uO3gfpT0NtZbpow==","shasum":"bc418d3b797fbe40cd93923d31cc8d3597d19c94","tarball":"https://registry.npmjs.org/beasties/-/beasties-0.2.0.tgz","fileCount":8,"unpackedSize":92228,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIGJSTBtAx9B7jbTpI7PjwmufPedLm/8GNqgNmYO41/67AiEAi44jVcMRh/OeiOIv1MxRjDHpUoZs78mXwt7OA4rp5ow="}]},"_npmUser":{"name":"danielroe","email":"daniel@roe.dev"},"directories":{},"maintainers":[{"name":"danielroe","email":"daniel@roe.dev"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/beasties_0.2.0_1733436296735_0.040252077917083406"},"_hasShrinkwrap":false}},"time":{"created":"2024-10-25T12:24:20.314Z","modified":"2024-12-05T22:04:57.189Z","0.0.0":"2024-10-25T12:24:20.641Z","0.0.26":"2024-10-25T20:39:46.632Z","0.1.0":"2024-10-26T15:14:10.413Z","0.2.0":"2024-12-05T22:04:57.021Z"},"bugs":{"url":"https://github.com/danielroe/beasties/issues"},"author":{"name":"The Chromium Authors"},"license":"Apache-2.0","homepage":"https://github.com/danielroe/beasties#readme","keywords":["critical css","inline css","critical","beasties","webpack plugin","performance"],"repository":{"type":"git","url":"git+https://github.com/danielroe/beasties.git","directory":"packages/beasties"},"description":"Inline critical CSS and lazy-load the rest.","contributors":[{"name":"Jason Miller","email":"developit@google.com"},{"name":"Janicklas Ralph","email":"janicklas@google.com"}],"maintainers":[{"name":"danielroe","email":"daniel@roe.dev"}],"readme":"<p align=\"center\">\n  <img src=\"https://i.imgur.com/J0jv1Sz.png\" width=\"240\" height=\"240\" alt=\"beasties\">\n  <h1 align=\"center\">Beasties</h1>\n</p>\n\n> Beasties is a plugin that inlines your app's [critical CSS] and lazy-loads the rest. It is a maintained fork of [GoogleChromeLabs/critters](https://github.com/GoogleChromeLabs/critters)\n\n## beasties [![npm](https://img.shields.io/npm/v/beasties.svg)](https://www.npmjs.org/package/beasties)\n\nIt's a little different from [other options](#similar-libraries), because it **doesn't use a headless browser** to render content. This tradeoff allows Beasties to be very **fast and lightweight**. It also means Beasties inlines all CSS rules used by your document, rather than only those needed for above-the-fold content. For alternatives, see [Similar Libraries](#similar-libraries).\n\nBeasties' design makes it a good fit when inlining critical CSS for prerendered/SSR'd Single Page Applications. It was developed to be an excellent compliment to [prerender-loader](https://github.com/GoogleChromeLabs/prerender-loader), combining to dramatically improve first paint time for most Single Page Applications.\n\n## Features\n\n- Fast - no browser, few dependencies\n- Integrates with Webpack [beasties-webpack-plugin]\n- Supports preloading and/or inlining critical fonts\n- Prunes unused CSS keyframes and media queries\n- Removes inlined CSS rules from lazy-loaded stylesheets\n\n## Installation\n\nFirst, install Beasties as a development dependency:\n\n```sh\nnpm i -D beasties\n```\n\nor\n\n```sh\nyarn add -D beasties\n```\n\n## Simple Example\n\n```js\nimport Beasties from 'beasties'\n\nconst beasties = new Beasties({\n  // optional configuration (see below)\n})\n\nconst html = `\n  <style>\n    .red { color: red }\n    .blue { color: blue }\n  </style>\n  <div class=\"blue\">I'm Blue</div>\n`\n\nconst inlined = await beasties.process(html)\n\nconsole.log(inlined)\n// \"<style>.blue{color:blue}</style><div class=\\\"blue\\\">I'm Blue</div>\"\n```\n\n## Usage with webpack\n\nBeasties is also available as a Webpack plugin called [beasties-webpack-plugin](https://www.npmjs.org/package/beasties-webpack-plugin). [![npm](https://img.shields.io/npm/v/beasties-webpack-plugin.svg)](https://www.npmjs.org/package/beasties-webpack-plugin)\n\nThe Webpack plugin supports the same configuration options as the main `beasties` package:\n\n```diff\n// webpack.config.js\n+const Beasties = require('beasties-webpack-plugin');\n\nmodule.exports = {\n  plugins: [\n+    new Beasties({\n+      // optional configuration\n+      preload: 'swap',\n+    })\n  ]\n}\n```\n\nThat's it! The resultant html will have its critical CSS inlined and the stylesheets lazy-loaded.\n\n## Usage\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n### Beasties\n\nAll optional. Pass them to `new Beasties({ ... })`.\n\n#### Parameters\n\n- `options`\n\n#### Properties\n\n- `path` **[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** Base path location of the CSS files _(default: `''`)_\n- `publicPath` **[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** Public path of the CSS resources. This prefix is removed from the href _(default: `''`)_\n- `external` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Inline styles from external stylesheets _(default: `true`)_\n- `inlineThreshold` **[Number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** Inline external stylesheets smaller than a given size _(default: `0`)_\n- `minimumExternalSize` **[Number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)** If the non-critical external stylesheet would be below this size, just inline it _(default: `0`)_\n- `pruneSource` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Remove inlined rules from the external stylesheet _(default: `false`)_\n- `mergeStylesheets` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Merged inlined stylesheets into a single `<style>` tag _(default: `true`)_\n- `additionalStylesheets` **[Array](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array)<[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)>** Glob for matching other stylesheets to be used while looking for critical CSS.\n- `reduceInlineStyles` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Option indicates if inline styles should be evaluated for critical CSS. By default inline style tags will be evaluated and rewritten to only contain critical CSS. Set it to `false` to skip processing inline styles. _(default: `true`)_\n- `preload` **[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** Which [preload strategy](#preloadstrategy) to use\n- `noscriptFallback` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Add `<noscript>` fallback to JS-based strategies\n- `inlineFonts` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Inline critical font-face rules _(default: `false`)_\n- `preloadFonts` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Preloads critical fonts _(default: `true`)_\n- `fonts` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Shorthand for setting `inlineFonts` + `preloadFonts`\\* Values:\n  - `true` to inline critical font-face rules and preload the fonts\n  - `false` to don't inline any font-face rules and don't preload fonts\n- `keyframes` **[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** Controls which keyframes rules are inlined.\\* Values:\n  - `\"critical\"`: _(default)_ inline keyframes rules used by the critical CSS\n  - `\"all\"` inline all keyframes rules\n  - `\"none\"` remove all keyframes rules\n- `compress` **[Boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** Compress resulting critical CSS _(default: `true`)_\n- `logLevel` **[String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** Controls [log level](#loglevel) of the plugin _(default: `\"info\"`)_\n- `logger` **[object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** Provide a custom logger interface [logger](#logger)\n\n### Include/exclude rules\n\nWe can include or exclude rules to be part of critical CSS by adding comments in the CSS\n\nSingle line comments to include/exclude the next CSS rule\n\n```css\n/* beasties:exclude */\n.selector1 {\n  /* this rule will be excluded from critical CSS */\n}\n\n.selector2 {\n  /* this will be evaluated normally */\n}\n\n/* beasties:include */\n.selector3 {\n  /* this rule will be included in the critical CSS */\n}\n\n.selector4 {\n  /* this will be evaluated normally */\n}\n```\n\nIncluding/Excluding multiple rules by adding start and end markers\n\n```css\n/* beasties:exclude start */\n\n.selector1 {\n  /* this rule will be excluded from critical CSS */\n}\n\n.selector2 {\n  /* this rule will be excluded from critical CSS */\n}\n\n/* beasties:exclude end */\n```\n\n```css\n/* beasties:include start */\n\n.selector3 {\n  /* this rule will be included in the critical CSS */\n}\n\n.selector4 {\n  /* this rule will be included in the critical CSS */\n}\n\n/* beasties:include end */\n```\n\n### Beasties container\n\nBy default Beasties evaluates the CSS against the entire input HTML. Beasties evaluates the Critical CSS by reconstructing the entire DOM and evaluating the CSS selectors to find matching nodes. Usually this works well as Beasties is lightweight and fast.\n\nFor some cases, the input HTML can be very large or deeply nested which makes the reconstructed DOM much larger, which in turn can slow down the critical CSS generation. Beasties is not aware of viewport size and what specific nodes are above the fold since there is not a headless browser involved.\n\nTo overcome this issue Beasties makes use of **Beasties containers**.\n\nA Beasties container mimics the viewport and can be enabled by adding `data-beasties-container` into the top level container thats contains the HTML elements above the fold.\n\nYou can estimate the contents of your viewport roughly and add a <div `data-beasties-container` > around the contents.\n\n```html\n<html>\n  <body>\n    <div class=\"container\">\n      <div data-beasties-container>\n        /* HTML inside this container are used to evaluate critical CSS */\n      </div>\n      /* HTML is ignored when evaluating critical CSS */\n    </div>\n    <footer></footer>\n  </body>\n</html>\n```\n\n_Note: This is an easy way to improve the performance of Beasties_\n\n### Logger\n\nCustom logger interface:\n\nType: [object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)\n\n#### Properties\n\n- `trace` **function ([String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String))** Prints a trace message\n- `debug` **function ([String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String))** Prints a debug message\n- `info` **function ([String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String))** Prints an information message\n- `warn` **function ([String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String))** Prints a warning message\n- `error` **function ([String](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String))** Prints an error message\n\n### LogLevel\n\nControls log level of the plugin. Specifies the level the logger should use. A logger will\nnot produce output for any log level beneath the specified level. Available levels and order\nare:\n\n- **\"info\"** _(default)_\n- **\"warn\"**\n- **\"error\"**\n- **\"trace\"**\n- **\"debug\"**\n- **\"silent\"**\n\nType: (`\"info\"` | `\"warn\"` | `\"error\"` | `\"trace\"` | `\"debug\"` | `\"silent\"`)\n\n### PreloadStrategy\n\nThe mechanism to use for lazy-loading stylesheets.\n\nNote: <kbd>JS</kbd> indicates a strategy requiring JavaScript (falls back to `<noscript>` unless disabled).\n\n- **default:** Move stylesheet links to the end of the document and insert preload meta tags in their place.\n- **\"body\":** Move all external stylesheet links to the end of the document.\n- **\"media\":** Load stylesheets asynchronously by adding `media=\"not x\"` and removing once loaded. <kbd>JS</kbd>\n- **\"swap\":** Convert stylesheet links to preloads that swap to `rel=\"stylesheet\"` once loaded ([details](https://www.filamentgroup.com/lab/load-css-simpler/#the-code)). <kbd>JS</kbd>\n- **\"swap-high\":** Use `<link rel=\"alternate stylesheet preload\">` and swap to `rel=\"stylesheet\"` once loaded ([details](http://filamentgroup.github.io/loadCSS/test/new-high.html)). <kbd>JS</kbd>\n- **\"js\":** Inject an asynchronous CSS loader similar to [LoadCSS](https://github.com/filamentgroup/loadCSS) and use it to load stylesheets. <kbd>JS</kbd>\n- **\"js-lazy\":** Like `\"js\"`, but the stylesheet is disabled until fully loaded.\n- **false:** Disables adding preload tags.\n\nType: (default | `\"body\"` | `\"media\"` | `\"swap\"` | `\"swap-high\"` | `\"js\"` | `\"js-lazy\"`)\n\n## Similar Libraries\n\nThere are a number of other libraries that can inline Critical CSS, each with a slightly different approach. Here are a few great options:\n\n- [Critical](https://github.com/addyosmani/critical)\n- [Penthouse](https://github.com/pocketjoso/penthouse)\n- [webpack-critical](https://github.com/lukeed/webpack-critical)\n- [webpack-plugin-critical](https://github.com/nrwl/webpack-plugin-critical)\n- [html-critical-webpack-plugin](https://github.com/anthonygore/html-critical-webpack-plugin)\n- [react-snap](https://github.com/stereobooster/react-snap)\n\n## License\n\n[Apache 2.0](LICENSE)\n\nThis is not an official Google product.\n\n[beasties-webpack-plugin]: https://github.com/danielroe/beasties/tree/main/packages/beasties-webpack-plugin\n[critical css]: https://www.smashingmagazine.com/2015/08/understanding-critical-css/\n[html-webpack-plugin]: https://github.com/jantimon/html-webpack-plugin\n","readmeFilename":"README.md"}